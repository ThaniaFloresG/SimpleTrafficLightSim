`timescale 1ns / 1ps
module vga_logic(squares, color, pixel_row, pixel_col, red, green, blue);
 input [2:0] squares;
 input [2:0] color;
 input [10:0] pixel_row, pixel_col;
 
 
 output red, green, blue;
 
 reg sq0,sq1,sq2;
 
 parameter sq_size = 50;
 
  assign red =  (sq0&&squares[0]&&color[2]) || (sq1&&squares[1]&&color[2]) || (sq2&&squares[2]&&color[2]);

 assign green = (sq0&&squares[0]&&color[1]) || (sq1&&squares[1]&&color[1]) || (sq2&&squares[2]&&color[1]) ;

 assign blue =  (sq0&&squares[0]&&color[0]) || (sq1&&squares[1]&&color[0]) || (sq2&&squares[2]&&color[0]);

//Square 0
  always@(pixel_row, pixel_col)
  begin
	if (400 <= pixel_col + sq_size &&
	400 + sq_size >= pixel_col &&
   	100 <= pixel_row + sq_size &&
   	100 + sq_size >= pixel_row )
   	sq0 <= 1;
   	else
   	sq0 <= 0;
  end

//Square 1
  always@(pixel_row, pixel_col)
	begin
    	if (400 <= pixel_col + sq_size &&
	400 + sq_size >= pixel_col &&
	220 <= pixel_row + sq_size &&
	220 + sq_size >= pixel_row )
      	sq1 <= 1;
    	else
      	sq1 <= 0;
	end
//Square 2
  always@(pixel_row, pixel_col)
	begin
    	if (400 <= pixel_col + sq_size &&
	400 + sq_size >= pixel_col &&
	360 <= pixel_row + sq_size &&
	360 + sq_size >= pixel_row )
      	sq2 <= 1;
	else
	sq2 <= 0;
	end

endmodule
